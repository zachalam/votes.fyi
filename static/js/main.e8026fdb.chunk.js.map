{"version":3,"sources":["assets/logo/votes.fyi.png","services/aragon.js","components/Loader.js","components/Login.js","components/Rankings.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","theOrganization","a","connect","org","app","votingApp","allCasts","voting","Voting","address","votes","vote","casts","cast","voterId","voter","foundVoter","findIndex","element","voterShort","substring","voterRecord","supportVotes","supports","totalVotes","push","sort","b","bundle","allVotes","console","log","aragonVote","Loader","props","state","visibile","setInterval","setState","visible","orgName","this","shortenedName","length","animationIn","isVisible","animationInDuration","src","Logo","style","width","class","paddingTop","paddingBottom","color","React","Component","Login","className","marginBottom","href","target","Form","onSubmit","setOrgName","Input","size","value","placeholder","onChange","e","Button","primary","type","onClick","window","location","hash","reload","Rankings","confetti","currentVoter","voterCount","nextVoter","bind","lastVoter","castVote","l","percentVote","toFixed","supportRate","Icon","name","Table","basic","celled","collapsing","Body","Row","positive","Cell","Label","ribbon","whenVote","howVote","active","config","colors","elementCount","stagger","spread","angle","padding","borderRadius","backgroundColor","icon","labelPosition","position","cursor","textSize","top","left","App","runVoteLookup","votingDetails","alert","Leaderboard","leaderboard","Object","entries","key","split","newProps","toRender","Grid","textAlign","height","verticalAlign","Column","maxWidth","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e8026fdb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/votes.fyi.561ac2a9.png\";","import { connect } from \"@aragon/connect\";\nimport { Voting } from \"@aragon/connect-thegraph-voting\";\n\nasync function aragonVote(theOrganization) {\n  // establish an aragon org..\n  const org = await connect(theOrganization, \"thegraph\");\n\n  // fetch the voting app that belonging to this organization\n  const votingApp = await org.app(\"voting\");\n\n  // gather useful vote information for this app.\n  let allCasts = [];\n  let allVotes = {};\n\n  // create voting app based on address.\n  const voting = new Voting(\n    votingApp.address,\n    \"https://api.thegraph.com/subgraphs/name/aragon/aragon-voting-mainnet\"\n  );\n\n  // grab all votes from the app\n  const votes = await voting.votes();\n\n  for (const vote of votes) {\n    // each vote (or poll) cast in this org.\n    /* \n        appAddress: \"0x277bfcf7c2e162cb1ac3e9ae228a3132a75f83d4\"\n        creator: \"0xe53c8566e831b127c603c968158c59091a5e380e\"\n        executed: false\n        id: \"appAddress:0x277bfcf7c2e162cb1ac3e9ae228a3132a75f83d4-voteId:0x27\"\n        metadata: \"Do you approve AGP-143: Fundraising Maintenance? (Link: https://raw.githubusercontent.com/aragon/AGPs/bf5a8eb0a3436072bcb5b2fa818c94cd507e2121/AGPs/AGP-143.md) (SHA256: 69d7e593d6324358b40e2aa61dfef636f4c04a11d8afaae012e79a1ae4161e0f)\"\n        minAcceptQuorum: \"0\"\n        nay: \"2900000000000000000000\"\n        orgAddress: \"0x2de83b50af29678774d5abc4a7cb2a588762f28c\"\n        script: \"0x00000001\"\n        snapshotBlock: \"9089520\"\n        startDate: \"1576080045\"\n        supportRequiredPct: \"500000000000000000\"\n        votingPower: \"39609523809523809540000000\"\n        yea: \"910656589901319474703579\"\n    */\n    const casts = await vote.casts();\n    for (const cast of casts) {\n      // each cast made towards a vote in this org..\n      /* \n        id: \"appAddress:0x277bfcf7c2e162cb1ac3e9ae228a3132a75f83d4-voteId:0x18-castNum:0.0\"\n        supports: true\n        voteId: \"appAddress:0x277bfcf7c2e162cb1ac3e9ae228a3132a75f83d4-voteId:0x18\"\n        voter: \"0xb8506be2c700641873108a1a47d8e509157cf23\n        */\n      const voterId = cast.voter;\n\n      // find existing voter..\n      const foundVoter = allCasts.findIndex(\n        (element) => element.voter === voterId\n      );\n\n      const voterShort = voterId.substring(0, 8) + \"..\" + voterId.substring(36);\n      if (foundVoter > -1) {\n        // already keeping track of this voter, updated\n        const voterRecord = {\n          voter: cast.voter,\n          voterShort,\n          supportVotes:\n            (cast.supports ? 1 : 0) + allCasts[foundVoter].supportVotes,\n          totalVotes: 1 + allCasts[foundVoter].totalVotes,\n        };\n        allCasts[foundVoter] = voterRecord;\n      } else {\n        // first time seeing this voter.\n        allCasts.push({\n          voter: cast.voter,\n          voterShort,\n          supportVotes: cast.supports ? 1 : 0,\n          totalVotes: 1,\n        });\n      }\n    }\n  }\n\n  // sort all casts..\n  allCasts.sort((b, a) => {\n    return a.totalVotes - b.totalVotes;\n  });\n  const bundle = { allVotes: votes, allCasts };\n  console.log(\"bundle is\");\n  console.log(bundle);\n  return bundle;\n}\n\nexport default aragonVote;\n","import React from \"react\";\nimport Logo from \"../assets/logo/votes.fyi.png\";\nimport { Animated } from \"react-animated-css\";\n\nclass Loader extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visibile: true,\n    };\n  }\n\n  componentDidMount() {\n    setInterval(() => { this.setState({ visible: false }) }, 1012);\n    setInterval(() => { this.setState({ visible: true }) }, 1024);\n\n  }\n\n\n\n  render() {\n\n    const { orgName } = this.props;\n    const shortenedName = orgName.length > 28 ? orgName.substring(0,28) + \"...\" : orgName;\n    let toRender = (\n      <>\n        <Animated\n          animationIn=\"pulse\"\n          isVisible={this.state.visible}\n          animationInDuration={1000}\n        >\n          <>\n            <img src={Logo} style={{ width: \"75%\" }} />\n          </>\n        </Animated>\n\n        <div class=\"xlarge\" style={{paddingTop:'20px',paddingBottom:'20px'}}>Crunching votes</div>\n        <div class=\"medium\" style={{color:'grey'}}><b>{shortenedName}</b></div>\n      </>\n    );\n\n    return toRender;\n  }\n}\n\nexport default Loader;\n","import React from \"react\";\nimport Logo from \"../assets/logo/votes.fyi.png\";\nimport { Animated } from \"react-animated-css\";\nimport { Form, Button, Input } from \"semantic-ui-react\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      orgName: \"\",\n    };\n  }\n\n  render() {\n    let toRender = (\n      <>\n        <Animated\n          animationIn=\"bounceInDown\"\n          isVisible={true}\n          animationInDuration={1000}\n        >\n          <>\n            <img src={Logo} style={{ width: \"75%\" }} />\n          </>\n        </Animated>\n\n        <div\n          className=\"xlarge\"\n          style={{ paddingTop: \"20px\", paddingBottom: \"20px\" }}\n        >\n          DAO Leaders\n        </div>\n        <div style={{ marginBottom: \"20px\" }}>\n          Provide an{\" \"}\n          <a href=\"https://aragon.org\" target=\"_blank\">\n            Aragon DAO\n          </a>{\" \"}\n          address and we'll generate a leaderboard based on the{\" \"}\n          <b>most active voters</b>.\n        </div>\n\n        <Form onSubmit={() => this.props.setOrgName(this.state.orgName)}>\n          <Input\n            size=\"huge\"\n            value={this.state.orgName}\n            placeholder=\"governance.aragonproject.eth\"\n            onChange={(e) => {\n              this.setState({ orgName: e.target.value });\n            }}\n          />{\" \"}\n          <Button primary type=\"submit\" size=\"huge\">\n            Go\n          </Button>\n        </Form>\n        <div>\n          Unsure? Try{\" \"}\n          <a\n            href=\"#\"\n            onClick={() => {\n              window.location.hash = \"governance.aragonproject.eth\";\n              window.location.reload();\n            }}\n          >\n            governance.aragonproject.eth\n          </a>\n        </div>\n      </>\n    );\n\n    return toRender;\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport Confetti from \"react-dom-confetti\";\nimport { Icon, Label, Button, Table } from \"semantic-ui-react\";\n\nclass Rankings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      confetti: false,\n      currentVoter: 0,\n      voterCount: this.props.allCasts.length,\n    };\n\n    this.nextVoter = this.nextVoter.bind(this);\n    this.lastVoter = this.lastVoter.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({ confetti: true });\n  }\n\n  nextVoter() {\n    let nextVoter = this.state.currentVoter + 1;\n    if (nextVoter === this.state.voterCount) nextVoter = 0;\n    this.setState({ currentVoter: nextVoter });\n  }\n\n  lastVoter() {\n    let nextVoter = this.state.currentVoter - 1;\n    // go to end\n    if (nextVoter === -1) nextVoter = this.props.allCasts.length - 1;\n    console.log(\"nextvoter is\", nextVoter);\n    this.setState({ currentVoter: nextVoter });\n  }\n\n  whenVote(castVote, allVotes) {\n    console.log(\"allVotes\");\n    console.log(allVotes.l);\n    const voteRate = castVote.totalVotes / allVotes.length;\n\n    const percentVote = (voteRate * 100).toFixed(2);\n\n    return (\n      <>\n        This user voted in {percentVote}% of the total {allVotes.length}{\" \"}\n        measures.\n      </>\n    );\n  }\n\n  howVote(castVote) {\n    const supportRate = castVote.supportVotes / castVote.totalVotes;\n\n    const percentVote = (supportRate * 100).toFixed(2);\n\n    if (supportRate > 0.5) {\n      return (\n        <>\n          <div className=\"large\" style={{ color: \"green\" }}>\n            Tends to vote <b>in support</b>.\n          </div>\n          This user supported {percentVote}% of measures.\n        </>\n      );\n    }\n\n    return (\n      <>\n        <div className=\"large\" style={{ color: \"gray\" }}>\n          Tends to vote <b>in opposition</b>.\n        </div>\n        This user supported {percentVote}% of measures.\n      </>\n    );\n  }\n\n  render() {\n    let { allCasts, allVotes } = this.props;\n    const { currentVoter } = this.state;\n\n    let toRender = (\n      <>\n        <div className=\"xlarge\">\n          <Icon name=\"user circle\" /> DAO Leaderboard\n        </div>\n        <a\n          href={`https://mainnet.aragon.org/#/${this.props.orgName}`}\n          target=\"_blank\"\n        >\n          {this.props.orgName}\n        </a>\n        <br />\n        <br />\n        <Table basic='very' celled collapsing style={{ width: \"100%\" }}>\n          <Table.Body>\n            <Table.Row positive>\n              <Table.Cell style={{ width: \"60%\" }}>\n                <Label ribbon>\n                  <div className=\"large\">\n                    #{currentVoter + 1} of {allCasts.length}\n                  </div>\n                </Label>\n                <div className=\"large\">{allCasts[currentVoter].voterShort}</div>\n                Looking for more info?{\" \"}\n                <a\n                  href={`https://etherscan.io/address/${allCasts[currentVoter].voter}`}\n                  target=\"_blank\"\n                >\n                  view on etherscan.io\n                </a>\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <div className=\"large\">\n                  Cast <b>{allCasts[currentVoter].totalVotes} votes</b>.\n                </div>\n                {this.whenVote(allCasts[currentVoter], allVotes)}\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>{this.howVote(allCasts[currentVoter])}</Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n\n        <Confetti\n          active={this.state.confetti}\n          config={{\n            colors: [\"#6D6DAA\", \"#C7E9FF\"],\n            elementCount: 120,\n            stagger: 10,\n            spread: 70,\n            angle: 50,\n          }}\n        />\n        <br />\n        {this.state.voterCount > 1 ? (\n          <div style={{padding:'0.25em', borderRadius:'1em', backgroundColor:'rgba(0,0,0,0.1)'}}>\n            <Button icon labelPosition=\"left\" size={'huge'} onClick={this.lastVoter}>\n              <Icon name=\"left arrow\" />\n              Last\n            </Button>{\" \"}\n            <Button icon labelPosition=\"right\" size={'huge'} onClick={this.nextVoter}>\n              Next\n              <Icon name=\"right arrow\" />\n            </Button>\n          </div>\n        ) : <b>This organization only has 1 voter.</b>}\n\n\n        <div style={{position:'fixed', cursor: 'pointer', textSize: '2em', top: '5px', left: '5px'}}>\n            <a href=\"/\"><Icon className={\"home\"} /></a>\n        </div>\n      </>\n    );\n\n    return toRender;\n  }\n}\n\nexport default Rankings;\n","import React from \"react\";\nimport { Grid } from \"semantic-ui-react\";\n\nimport aragonVote from \"./services/aragon\";\nimport Loader from \"./components/Loader\";\nimport Login from \"./components/Login\";\nimport Rankings from \"./components/Rankings\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      votingDetails: {},\n      orgName: \"\",\n    };\n  }\n  async componentDidMount() {\n    const { hash } = window.location;\n    const orgName = hash.split(\"#\")[1];\n    this.setState({orgName})\n    if (orgName) {\n      // org provided in url.\n      this.runVoteLookup(orgName);\n    }\n  }\n\n  componentWillReceiveProps(newProps) {\n    console.log(\"new props are..\");\n    console.log(newProps);\n  }\n\n  setOrgName = (orgName) => {\n    this.setState({orgName});\n    this.runVoteLookup(orgName);\n  }\n\n  runVoteLookup = async (orgName) => {\n    try {\n      const votingDetails = await aragonVote(orgName);\n      this.setState({ votingDetails });\n      window.location=`/#${orgName}`\n    } catch(e) {\n      this.setState({ orgName: \"\"})\n      alert(\"Please enter a valid Aragon DAO name.\")\n    }\n  }\n\n  Leaderboard = (casts) => {\n    console.log(\"casts is..\");\n    console.log(casts);\n\n    let leaderboard = [];\n    for (const [key, cast] of Object.entries(casts)) {\n      leaderboard.push(<div>{key}</div>);\n    }\n    return leaderboard;\n  };\n\n  render() {\n    const { votingDetails, orgName } = this.state;\n    const { allCasts, allVotes } = votingDetails;\n\n    let toRender = <Login orgName={orgName} setOrgName={this.setOrgName} />;\n\n    if (orgName) {\n      // orgName provided but not sure about data yet\n      toRender = <Loader orgName={orgName} />;\n    }\n\n    if (allCasts) {\n      // orgName and data are both here.. display results\n      toRender = (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <Rankings orgName={orgName} allVotes={allVotes} allCasts={allCasts} />\n          </header>\n        </div>\n      );\n    }\n\n    // wrap in template\n    return (\n      <>\n        <Grid\n          textAlign=\"center\"\n          style={{ height: \"100vh\" }}\n          verticalAlign=\"middle\"\n        >\n          <Grid.Column style={{ maxWidth: 550, padding: \"2em\" }}>\n            {toRender}\n          </Grid.Column>\n        </Grid>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}